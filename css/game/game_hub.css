.container {
    display: grid;
    grid-template-columns: 1fr 2fr; /* PlayerData is 1 part, gameData is 2 parts */
    grid-template-rows: auto 1fr; /* Top row is sized by content, bottom row fills space */
    padding: 2vh 20px; /* Add some space from the top and sides */
    height: 100vh; /* Make container fill the viewport height */
    box-sizing: border-box;
    gap: 20px; /* Add space between the player and game data columns */
}

.PlayerData, .gameData {
    display: contents; /* Allows children to be direct grid items of .container */
}

.card {
    display: flex;
    flex-direction: column;
    align-items: center;
    border: solid 2px white;
    width: 100%;
    box-sizing: border-box;
    border-radius: 10px;
    padding: 10px;
    height: 100%;
    opacity: 0; /* Start invisible for animation */
    animation: flyInFromBottom 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards;
}

.playerCard {
    grid-column: 1;
    grid-row: 1;
    animation-delay: 0.1s;
}
.build {
    grid-column: 1;
    grid-row: 2;
    flex-direction: row;
    justify-content: center; /* Center the build items within the box */
    animation-delay: 0.3s;

    height: 30%;
}
.build img {
    width: 50px;
    height: 50px;
    margin-right: 10px;
}
.playerCard img {
    width: 100px;
    height: 100px;
}
.playerCard p {
    font-size: 1.5em;
    margin: 10px 0;
}
.action{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
    width: 100%;
    margin-top: auto; /* Push to the bottom of the flex container */
}

.content {
    grid-column: 2;
    grid-row: 1;
    animation-delay: 0.2s;
}
.content img {
    width: 100px;
    height: 100px;
    margin-bottom: 10px;
}
.content p {
    font-size: 1.5em;
    margin: 10px 0;
}

.output {
    grid-column: 2;
    grid-row: 2;
    animation-delay: 0.4s;


    height: 30%;
}

/* --- Animations --- */
@keyframes flyInFromBottom {
    from {
        opacity: 0;
        transform: translateY(50vh);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}